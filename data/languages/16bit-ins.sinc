######### 16-bit instructions #########

#=============== 0x00 ==============#
:mov55 hreg0509, hreg0004 is hwidth=0x1 & hins1014=0x00 & hreg0509 & hreg0004
{
	hreg0509 = hreg0004;
}

#=============== 0x01 ==============#
:movi55 hreg0509, himm0004 is hwidth=0x1 & hins1014=0x01 & hreg0509 & himm0004
{
	hreg0509 = himm0004;
}

#=============== 0x02 ==============#
:add45: hreg0508, hreg0004 is hwidth=0x1 & hins1014=0x02 & hins0909=0x0 & hreg0508 & hreg0004
{
	hreg0508 = hreg0508 + hreg0004;
}

:sub45: hreg0508, hreg0004 is hwidth=0x1 & hins1014=0x02 & hins0909=0x1 & hreg0508 & hreg0004
{
	hreg0508 = hreg0508 - hreg0004;
}

#=============== 0x03 ==============#
:addi45 hreg0508, himm0004 is hwidth=0x1 & hins1014=0x03 & hins0909=0x0 & hreg0508 & himm0004
{
	hreg0508 = hreg0508 + himm0004;
}

:subi45 hreg0508, himm0004 is hwidth=0x1 & hins1014=0x03 & hins0909=0x1 & hreg0508 & himm0004
{
	hreg0508 = hreg0508 - himm0004;
}

#=============== 0x04 ==============#
:srai45 hreg0508, himm0004 is hwidth=0x1 & hins1014=0x04 & hins0909=0x0 & hreg0508 & himm0004
{
	hreg0508 = hreg0508 s>> himm0004;
}

:srli45 hreg0508, himm0004 is hwidth=0x1 & hins1014=0x04 & hins0909=0x1 & hreg0508 & himm0004
{
	hreg0508 = hreg0508 >> himm0004;
}

#=============== 0x05 ==============#
:slli333 hreg0608, hreg0305, himm0002 is hwidth=0x1 & hins1014=0x05 & hins0909=0x0 & hreg0608 & hreg0305 & himm0002
{
	hreg0608 = hreg0305 << himm0002;
}

:zeb33 hreg0608, hreg0305 is hwidth=0x1 & hins1014=0x05 & hins0909=0x1 & hreg0608 & hreg0305 & hins0002=0x0
{
	hreg0608 = zext(hreg0305:1);
}

:zeh33 hreg0608, hreg0305 is hwidth=0x1 & hins1014=0x05 & hins0909=0x1 & hreg0608 & hreg0305 & hins0002=0x1
{
	hreg0608 = zext(hreg0305:2);
}

:seb33 hreg0608, hreg0305 is hwidth=0x1 & hins1014=0x05 & hins0909=0x1 & hreg0608 & hreg0305 & hins0002=0x2
{
	hreg0608 = sext(hreg0305:1);
}

:seh33 hreg0608, hreg0305 is hwidth=0x1 & hins1014=0x05 & hins0909=0x1 & hreg0608 & hreg0305 & hins0002=0x3
{
	hreg0608 = sext(hreg0305:2);
}

#=============== 0x06 ==============#
:addi333 hreg0608, hreg0305, hreg0002 is hwidth=0x1 & hins1014=0x06 & hins0909=0x0 & hreg0608 & hreg0305 & hreg0002
{
	hreg0608 = hreg0305 + hreg0002;
}

:subi333 hreg0608, hreg0305, hreg0002 is hwidth=0x1 & hins1014=0x06 & hins0909=0x1 & hreg0608 & hreg0305 & hreg0002
{
	hreg0608 = hreg0305 - hreg0002;
}

#=============== 0x07 ==============#
:addi333 hreg0608, hreg0305, himm0002 is hwidth=0x1 & hins1014=0x07 & hins0909=0x0 & hreg0608 & hreg0305 & himm0002
{
	hreg0608 = hreg0305 + himm0002;
}

:subi333 hreg0608, hreg0305, himm0002 is hwidth=0x1 & hins1014=0x07 & hins0909=0x1 & hreg0608 & hreg0305 & himm0002
{
	hreg0608 = hreg0305 - himm0002;
}

#=============== 0xXX ==============#
#:nop16 is hwidth=0x1 & hins0814=0x12
#{
#	nop();
#}

:j8 bjhimm8 is hwidth=0x1 & hins0814=0x55 & bjhimm8
{
	goto bjhimm8;
}

:jr5 hreg0004 is hwidth=0x1 & hins0814=0x5d & hins0507=0x0 & hreg0004
{
	goto [hreg0004];
}

:jral5 hreg0004 is hwidth=0x1 & hins0814=0x5d & hins0507=0x1 & hreg0004
{
	lp = inst_next;
	call [hreg0004];
}

:ret5 hreg0004 is hwidth=0x1 & hins0814=0x5d & hins0507=0x4 & hreg0004
{
	return [hreg0004];
}

